que1 : select all employees having same salary?
ans:- select e1.id, e1.name, e1.salary
      from employee e1
      join employee e2
      on e1.salary = e2.salary and e1.id != e2.id;

que2: Find department with most employees?
ans:- select dep_id, count(*) as num_of_emp
      from employee
      group by dep_id
      order by num_of_emp
      limit 1;

que3:- find employees without managers?
ans3:- select emp_id, name
       from employee
       where manager_id is null;

que 4: Nth highest salary using Window function?
ans 4:- 

With HIGHEST_SAL AS
(
SELECT NAME,
SALARY,
DENSE_RANK() OVER(ORDER BY SALARY DESC) AS SAL_RNK
FROM EMPLOYEE
)

SELECT NAME,
SALARY
FROM 
HIGHEST_SAL 
WHERE SAL_RNK = N;


Que5 Top 3 Salary in each department?
Ans 5:- 

WITH CTE AS
(
SELECT 
EMP_ID,
EMP_NAME,
SALARY,
DEP_ID,
DENSE_RANK() OVER(PARTITION BY DEP_ID ORDER BY SALARY DESC) AS SAL_RNK
FROM EMPLOYEE
)

SELECT EMP_NAME,
EMP_ID,
SALARY,
DEP_ID
FROM CTE
WHERE SAL_RNK <= 3;


Que 6:- Find employees with more than certain number of direct reports?
ANS 6:-

SELECT MANAGER_ID, COUNT(*) AS NUM_REPORTS
FROM EMPLOYEES
GROUP BY MANAGER_ID 
HAVING COUNT(*) > 3;

QUE7:- FIND EMPLOYEES IN SAME DEPARTMENT:-

ANS7:- SELECT E1.EMP_ID, E2.EMP_ID,  E1.DEP_ID, E2.DEP_ID
       FROM EMPLOYEE E1,
       JOIN EMPLOYEE E2
       ON E1.DEP_ID = E2.DEP_ID AND E1.EMP_ID < E2.EMP_ID;

QUE8: FIND DUPLICATE RECORDS IN A TABLE
ANS 8:-

SELECT NAME, COUNT(*)
FROM EMPLOYEE
GROUP BY NAME
HAVING COUNT(*) > 1;

QUE 9:- DELETE DUPLICATE RECORDS FROM TABLE?
ANS 9:-

WITH CTE AS 
(
SELECT NAME, EMPLOYEE_ID,
ROW_NUMBER() OVER(PARTITION BY NAME ORDER BY EMPLOYEE_ID) AS ROW_NUM
FROM EMPLOYEE
)

DELETE FROM EMPLOYEE
WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM CTE WHERE ROW_NUM > 1);


que 10:- Write a SQL query to report the first name, last name, city, and state of each person in the Person table. If the person's address is not in the Address table, report NULL instead.

Ans 10:- 

SELECT FIRST_NAME, LAST_NAME, CITY, STATE
FROM PERSON P
left JOIN ADDRESS A
ON  P.PERSON_ID = A.PERSON_ID;


QUE 11:- RANK SCORES
ANS 11:- 


SELECT ID, SCORE,
DENSE_RANK() OVER(ORDER BY SCORE DESC) AS RNK
FROM SCORES;

QUE 12:- EMPLOYEES EARNING MORE THAN THEIR MANAGERS
ANS 12:-

SELECT E1.NAME AS EMPLOYEE
FROM EMPLOYEE E1
JOIN EMPLOYEE E2 ON E1.MANAGER_ID = E2.ID
WHERE E1.SALARY > E2.SALARY;

QUE 13:- FIND DUPLICATE EMAILS
ANS 13:-

SELECT EMAIL
FROM PERSON
GROUP BY EMAIL 
HAVING COUNT(EMAIL) > 1;

Que 14: Customers who never order?
Ans 14:- 

SELECT NAME
FROM CUSTOMERS C
LEFT JOIN ORDERS O
ON C.ID = O.ID
WHERE O.CUSTOMER_ID IS NULL;


QUE 15: DEPARTMENT HIGHEST SALARY?
ANS 15:

WITH CTE AS
(
SELECT
E.NAME AS EMPLOYEE,
D.NAME AS DEPARTMENT,
E.SALARY,
DENSE_RANK() OVER(PARTITION BY E.DEPARTMENTID ORDER BY E.SALARY DESC) AS RN
FROM 
EMPLOYEE E

JOIN DEPARTMNET D ON E.DEPARTMENTID = E.ID
)

SELECT EMPLOYEE,
DEPARTMENT,
SALARY
FROM CTE
WHERE RN <= 3;


QUE 16:- Find Consecutive Numbers?
ANS 16:- 

SELECT DISTINCT NUM
FROM 
(

SELECT NUM,
LEAD(NUM) OVER(ORDER BY ID) AS PREVIOUS_NUM,
LAG(NUM) OVER(ORDER BY ID) AS NEXT_NUM
FROM LOGS
) AS TEMP

WHERE NUM = PREVIOUS_NUM AND NUM = NEXT_NUM;

QUE17:- RANK SCORE?
ANS 17

SELECT SCORE,
DENSE_RANK() OVER(ORDER BY SCORE DESC) AS SCORECARD
FROM SCORES;

QUE18:- FIND NTH HIGHEST SALARY?
ANS 18

WITH RANKEDSALARY AS
(
SELECT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) AS RANK
FROM EMPLOYEES
)

SELECT SALARY
FROM RANKEDSALARY
WHERE RANK = 3;






   